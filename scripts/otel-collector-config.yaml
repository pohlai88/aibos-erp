# OpenTelemetry Collector Configuration for AI-BOS ERP
# This configuration sets up observability with traces, metrics, and logs

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  prometheus:
    config:
      scrape_configs:
        - job_name: 'aibos-bff'
          scrape_interval: 15s
          static_configs:
            - targets: ['host.docker.internal:3001']
        - job_name: 'aibos-web'
          scrape_interval: 15s
          static_configs:
            - targets: ['host.docker.internal:3000']
        - job_name: 'kong'
          scrape_interval: 15s
          static_configs:
            - targets: ['kong:8001']

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  memory_limiter:
    limit_mib: 512
    spike_limit_mib: 128
    check_interval: 5s

  resource:
    attributes:
      - key: service.name
        value: aibos-erp
        action: upsert
      - key: service.version
        value: 1.0.0
        action: upsert
      - key: deployment.environment
        value: development
        action: upsert

  attributes:
    actions:
      - key: tenant_id
        action: insert
        from_attribute: tenant_id
      - key: user_id
        action: insert
        from_attribute: user_id

exporters:
  otlp:
    endpoint: jaeger:14250
    tls:
      insecure: true

  prometheus:
    endpoint: '0.0.0.0:8889'
    namespace: aibos_erp
    const_labels:
      environment: development

  logging:
    loglevel: info

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource, attributes]
      exporters: [otlp, logging]

    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, batch, resource]
      exporters: [prometheus, logging]

    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [logging]

  extensions: []
