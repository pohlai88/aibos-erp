'use client'; import type { TTrialBalanceQuery } from '@aibos/accounting-contracts'; import { JournalEntryForm, FinancialDashboard, ChartOfAccounts, TrialBalance,
} from '@aibos/accounting-web';
import { BookOpen, BarChart3, CreditCard, Home } from 'lucide-react';
import { useState } from 'react'; type TabType = 'dashboard' | 'journal' | 'accounts' | 'trial-balance'; export default function AccountingPage(): JSX.Element { const [activeTab, setActiveTab] = useState<TabType>('dashboard'); const tabs = [ { id: 'dashboard' as TabType, label: 'Dashboard', icon: Home }, { id: 'journal' as TabType, label: 'Journal Entries', icon: BookOpen }, { id: 'accounts' as TabType, label: 'Chart of Accounts', icon: CreditCard }, { id: 'trial-balance' as TabType, label: 'Trial Balance', icon: BarChart3 }, ]; const renderContent = (): JSX.Element => { switch (activeTab) { case 'dashboard': return <FinancialDashboard tenantId="dev-tenant-001" />; case 'journal': return ( <JournalEntryForm tenantId="dev-tenant-001" className="w-full" onPosted={(id) => console.log('Posted JE', id)} /> ); case 'accounts': return <ChartOfAccounts />; case 'trial-balance': { const query: TTrialBalanceQuery = { asOf: new Date().toISOString(), tenantId: 'dev-tenant-001', }; return <TrialBalance query={query} />; } default: return <FinancialDashboard tenantId="dev-tenant-001" />; } }; return ( <div className="min-h-screen bg-gray-50"> <div className="mx-auto max-w-7xl px-4 py-8 sm:px-6 lg:px-8"> {/* Header */} <div className="mb-8"> <h1 className="text-3xl font-bold text-semantic-secondary">Accounting</h1> <p className="mt-2 text-semantic-secondary"> Manage your financial records, journal entries, and reports. </p> </div> {/* Navigation Tabs */} <div className="mb-8"> <nav className="flex space-x-8 border-b border-semantic-secondary"> {tabs.map((tab) => { const Icon = tab.icon; return ( <button key={tab.id} onClick={() => setActiveTab(tab.id)} className={`flex items-center space-x-2 border-b-2 px-1 py-4 text-sm font-medium ${ activeTab === tab.id ? 'border-semantic-primary text-semantic-primary' : 'border-transparent text-semantic-secondary hover:border-semantic-secondary hover:text-semantic-secondary' }`} > <Icon className="h-4 w-4" /> <span>{tab.label}</span> </button> ); })} </nav> </div> {/* Content */} <div className="rounded-lg bg-white shadow"> <div className="p-6">{renderContent()}</div> </div> </div> </div> );
}
